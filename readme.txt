Для работы программы рекомендуется использовать python 3.7,
также необходимы библиотеки, указанные в requirements.txt
Установка библиотек:

    pip install -r requirements.txt

Приложение обрабатывает POST и GET запросы к БД sqlite3. Файл
ДБ называется shop.db и создается при запуске файла models.py,
при этом создаются таблицы:

    book        (информация о книге)  
    order       (информация о заказе)
    order_item  (информация о позиции заказа)
    shop        (информация о магазине)
    user        (информация о пользователе)

Далее в models.py эти таблицы заполняются произвольными данными.

Файл main.py обрабатывает запросы к API. Запуск приложения осуществляется
следующим образом:

    uvicorn main:app

Приложение обрабатывает следующие запросы:
1) Получение информации о пользователе:
Осуществляется посредством отправки GET запроса:

    <base_url>/users/<user_id>

Здесь и далее <user_id> - id пользователя в системе
Здесь и далее <base_url> = 'http://127.0.0.1:8000'

Ответом является JSON следующего вида:

    {
        'info': {
            'user_id': 1,
            'last_name': 'Dorian',
            'first_name': 'John',
            'email': 'dr.acula@scrubs.com'
        }
    }

2) Получение истории заказов пользователя:
Осуществляется посредством отправки GET запроса:

    <base_url>/history/<user_id>

Ответом является JSON следующего вида:

    {
        'info': [{
                'order_id': 1,
                'reg_date': '2021-01-01',
                'user_id': 1
            },
            {
                'order_id': 3,
                'reg_date': '2021-08-04',
                'user_id': 1
            },
            {
                'order_id': 5,
                'reg_date': '2021-08-05',
                'user_id': 1
            },
            {
                'order_id': 6,
                'reg_date': '2021-08-05',
                'user_id': 1
            },
            {
                'order_id': 7,
                'reg_date': '2021-08-05',
                'user_id': 1
            },
            {
                'order_id': 8,
                'reg_date': '2021-08-05',
                'user_id': 1
            }
        ]
    }

3) Получение данных заказа:
Осуществляется посредством отправки GET запроса:

    <base_url>/order/<order_id>

Здесь и далее <order_id> - id заказа

Ответом является JSON следующего вида:

    {
        'info': [{
            'order_item_id': 1,
            'order_id': 1,
            'book_id': 1,
            'book_name': 'War and peace',
            'author': 'L. Tolstoy',
            'release_date': '2020-01-01',
            'shop_id': 1,
            'shop_name': 'BookShop#1',
            'address': 'NY',
            'quantity': 1
            }, 
            {
            'order_item_id': 5,
            'order_id': 1,
            'book_id': 1,
            'book_name': 'War and peace',
            'author': 'L. Tolstoy',
            'release_date': '2020-01-01',
            'shop_id': 1,
            'shop_name': 'BookShop#1',
            'address': 'NY',
            'quantity': 1
        }]
    }

4) Внесение нового заказа:
Осуществляется посредством отправки POST запроса:

    <base_url>/new/

который содержит в теле JSON с информацией о пользователе (user_id) и 
позициях заказа. В позиции заказа содержится информация о книге (book_id),
магазине (shop_id) и количестве (quantity):

    {
        "user_id": 1,
        "data": [{
            "book_id": 3,
            "shop_id": 2,
            "quantity": 3
            }, 
            {
            "book_id": 4,
            "shop_id": 1,
            "quantity": 1
        }]
    }

При получени проверяется, есть ли в базе данных такие пользователь, книга и магазин.
Если данные действительны, обновляются таблицы, содежащие заказы и позиции заказов. 
пользователю возвращается сообщение об успешном добавлении:

    {'info': 'successfully inserted'}

Приложение записывает лог в logs.log. В файл заносятся системные сообщения, а также определенные
в скрипте сообщения, которые делятся на информационные, предупреждения и сообщения об ошибках.